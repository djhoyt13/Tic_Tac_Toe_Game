from IPython.display import clear_output

#Displays the board
def display_board(board):
    
    print(board[1]+'|'+board[2]+'|'+board[3])
    print('-----')
    print(board[4]+'|'+board[5]+'|'+board[6])
    print('-----')
    print(board[7]+'|'+board[8]+'|'+board[9])

#Assigns X or O
def player_input():
    marker = ''
    
    while not (marker == 'X' or marker == 'O'):
        marker = input('Player 1: Do you want to be X or O? ').upper()

    if marker == 'X':
        return ('X', 'O')
    else:
        return ('O', 'X')
    
#Marks the desired place on the board
def place_marker(board, marker, position):
    board[position] = marker
    
#Checks to see if he game is won
def win_check(board, mark):
    
    return ((board[1] == mark and board[2] == mark and board[3] == mark) 
    or (board[4] == mark and board[5] == mark and board[6] == mark)          
    or (board[7] == mark and board[8] == mark and board[9] == mark)
    or (board[1] == mark and board[4] == mark and board[7] == mark) 
    or (board[2] == mark and board[5] == mark and board[8] == mark)
    or (board[3] == mark and board[6] == mark and board[9] == mark)
    or (board[1] == mark and board[5] == mark and board[9] == mark)
    or (board[3] == mark and board[5] == mark and board[7] == mark))

#Chooses who will go first
import random

def choose_first():
    if random.randint(1,2) == 1:
        return 'Player 1'
    else:
        return 'Player 2'
    
#Checks to see if the space is available
def space_check(board, position):
    
    if board[position] == 'X' or board[position] =='O':
        return False
    else:
        return True
    
#Checks for a 'cats' game
def full_board_check(board):
    
    return ((board[1] == 'X' or board[1] == 'O') 
    and (board[2] == 'X' or board[2] == 'O') 
    and (board[3] == 'X' or board[3] == 'O') 
    and (board[4] == 'X' or board[4] == 'O') 
    and (board[5] == 'X' or board[5] == 'O') 
    and (board[6] == 'X' or board[6] == 'O') 
    and (board[7] == 'X' or board[7] == 'O') 
    and (board[8] == 'X' or board[8] == 'O') 
    and (board[9] == 'X' or board[9] == 'O'))

#Defines player's position choice
def player_choice(board):
    position = 0
    
    while position not in [1,2,3,4,5,6,7,8,9] or not space_check(board, position):
        position = int(input('Please chose an open position: (1-9) '))
    
    return position

#Answers if the players want to play again
def replay():
    
    return input('Do you want to play again? Enter Yes or No: ').lower().startswith('y')

#Games execution
print('Welcome to Tic Tac Toe!')

while True:
    # Reset the board
    theBoard = [' '] * 10
    player1_marker, player2_marker = player_input()
    turn = choose_first()
    print(turn + ' will go first.')
    
    play_game = input('Are you ready to play? Enter Yes or No.')
    
    if play_game.lower()[0] == 'y':
        game_on = True
    else:
        game_on = False
        
    while game_on:
        if turn == 'Player 1':
        #Player 1 Turn
            
            display_board(theBoard)
            position = player_choice(theBoard)
            place_marker(theBoard,player1_marker,position)
            
            if win_check(theBoard,player1_marker):
                display_board(theBoard)
                print('Congratulations! You have won the game!')
                game_on = False
            else:
                if full_board_check(theBoard):
                    display_board(theBoard)
                    print('The game is a draw!')
                    break
                else:
                    turn = 'Player 2'
        else:
            # Player2's turn.
            
            display_board(theBoard)
            position = player_choice(theBoard)
            place_marker(theBoard,player2_marker,position)
            
            if win_check(theBoard,player2_marker):
                display_board(theBoard)
                print('Congratulations! You have won the game!')
                game_on = False
            else:
                if full_board_check(theBoard):
                    display_board(theBoard)
                    print('The game is a draw!')
                    break
                else:
                    turn = 'Player 1'
            
    if not replay():
        break
